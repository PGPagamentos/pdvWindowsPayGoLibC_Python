#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 05, 2019 06:21:27 PM -0300  platform: Windows NT

import sys
from Configs import *
from  Enums import *
from  CustomObjects import *
import os
from  time import *
#import ctypes.
from ctypes import *
from Interops import *
from PGWlib import *
#import teste_acesso
from tkinter import *
import tkinter as tk
import tkinter.ttk as ttk
from   tkinter.scrolledtext import ScrolledText

#######################################################################
# execução da inicialização e instalação 



import pdvWindowsPayGoLibC_Python_support




def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root, MainWindow
    
    #inicializa DLL
    ret = myPGWebLib.PW_iInit()

    print("ret PW_iInit() =")

    


    root = tk.Tk()
    pdvWindowsPayGoLibC_Python_support.set_Tk_var()
    top = Toplevel1 (root)
    teste1 = top
    pdvWindowsPayGoLibC_Python_support.init(root, top)

    

    addMandatoryParameters(top)
    LogaTransactionResult()
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    pdvWindowsPayGoLibC_Python_support.set_Tk_var()
    top = Toplevel1 (w)
    pdvWindowsPayGoLibC_Python_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("846x549+337+125")
        top.minsize(120, 1)
        top.maxsize(1362, 741)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        #self.Instala = tk.Button(top)
        #self.Instala.place(relx=0.047, rely=0.018, height=24, width=67)
        #self.Instala.configure(activebackground="#ececec")
        #self.Instala.configure(activeforeground="#000000")
        #self.Instala.configure(background="#d9d9d9")
        #self.Instala.configure(disabledforeground="#a3a3a3")
        #self.Instala.configure(foreground="#000000")
        #self.Instala.configure(highlightbackground="#d9d9d9")
        #self.Instala.configure(highlightcolor="black")
        #self.Instala.configure(pady="0")
        #self.Instala.configure(text='''Instala''')
        #self.Instala.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1Instala(e))

        #self.LogDll = tk.Listbox(top)
        
        self.LogDll = ScrolledText(top, height=5); 
        self.LogDll.grid(row=1, column=1)
        self.LogDll.place(relx=0.52, rely=0.073, relheight=0.696, relwidth=0.43)
        self.LogDll.config(state="disabled")
        #self.LogDll.place(relx=0.52, rely=0.073, relheight=0.696, relwidth=0.43)
        #self.LogDll.configure(background="white")
        #self.LogDll.configure(disabledforeground="#a3a3a3")
        #self.LogDll.configure(font="TkFixedFont")
        #self.LogDll.configure(foreground="#000000")
        #self.LogDll.configure(highlightbackground="#d9d9d9")
        #self.LogDll.configure(highlightcolor="black")
        #self.LogDll.configure(selectbackground="#c4c4c4")
        #self.LogDll.configure(selectforeground="black")
        #self.LogDll.yscrollcommand = True
        #self.LogDll.xscrollcommand = True

        self.cmbOper = ttk.Combobox(top)
        self.cmbOper.place(relx=0.201, rely=0.091, relheight=0.038
                , relwidth=0.252)
        
        
        self.dicionarioOper = dict()
        self.listaOper = []
        for item in E_PWOPER:
            print(item.value," -> ",item.name)
            self.dicionarioOper[item.name] = item.value
            self.listaOper.append(item.name)

        self.value_list = [1,2,3,4,5,6,]
        
        
        self.cmbOper.configure(values=self.listaOper)
        self.cmbOper.configure(textvariable=pdvWindowsPayGoLibC_Python_support.combobox)
        self.cmbOper.configure(takefocus="")
        self.cmbOper.bind('<<ComboboxSelected>>',lambda e:pdvWindowsPayGoLibC_Python_support.ComboboxSelectedCmbOper(e))

        self.lstParameters = tk.Listbox(top)
        self.lstParameters.place(relx=0.047, rely=0.219, relheight=0.532
                , relwidth=0.418)
        self.lstParameters.configure(background="white")
        self.lstParameters.configure(disabledforeground="#a3a3a3")
        self.lstParameters.configure(font="TkFixedFont")
        self.lstParameters.configure(foreground="#000000")
        self.lstParameters.configure(highlightbackground="#d9d9d9")
        self.lstParameters.configure(highlightcolor="black")
        self.lstParameters.configure(selectbackground="#c4c4c4")
        self.lstParameters.configure(selectforeground="black")
        self.lstParameters.bind('<<ListboxSelect>>',lambda e:pdvWindowsPayGoLibC_Python_support.SelectedlstParameters(e))

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.047, rely=0.091, height=21, width=126)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''PWINFO__OPERATION''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.047, rely=0.164, height=21, width=85)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''PARÂMETROS:''')

        self.btnRemover = tk.Button(top)
        self.btnRemover.place(relx=0.201, rely=0.164, height=24, width=87)
        self.btnRemover.configure(activebackground="#ececec")
        self.btnRemover.configure(activeforeground="#000000")
        self.btnRemover.configure(background="#d9d9d9")
        self.btnRemover.configure(disabledforeground="#a3a3a3")
        self.btnRemover.configure(foreground="#000000")
        self.btnRemover.configure(highlightbackground="#d9d9d9")
        self.btnRemover.configure(highlightcolor="black")
        self.btnRemover.configure(pady="0")
        self.btnRemover.configure(text='''Remover''')
        self.btnRemover.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnRemover(e))

        self.btnAdicionar = tk.Button(top)
        self.btnAdicionar.place(relx=0.343, rely=0.164, height=24, width=87)
        self.btnAdicionar.configure(activebackground="#ececec")
        self.btnAdicionar.configure(activeforeground="#000000")
        self.btnAdicionar.configure(background="#d9d9d9")
        self.btnAdicionar.configure(disabledforeground="#a3a3a3")
        self.btnAdicionar.configure(foreground="#000000")
        self.btnAdicionar.configure(highlightbackground="#d9d9d9")
        self.btnAdicionar.configure(highlightcolor="black")
        self.btnAdicionar.configure(pady="0")
        self.btnAdicionar.configure(text='''Adicionar''')
        self.btnAdicionar.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnAdicionar(e))

        self.btnLimpar = tk.Button(top)
        self.btnLimpar.place(relx=0.047, rely=0.765, height=24, width=68)
        self.btnLimpar.configure(activebackground="#ececec")
        self.btnLimpar.configure(activeforeground="#000000")
        self.btnLimpar.configure(background="#d9d9d9")
        self.btnLimpar.configure(disabledforeground="#a3a3a3")
        self.btnLimpar.configure(foreground="#000000")
        self.btnLimpar.configure(highlightbackground="#d9d9d9")
        self.btnLimpar.configure(highlightcolor="black")
        self.btnLimpar.configure(pady="0")
        self.btnLimpar.configure(text='''Limpar''')
        self.btnLimpar.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnLimpar(e))

        self.btnCaptura = tk.Button(top)
        self.btnCaptura.place(relx=0.142, rely=0.765, height=24, width=93)
        self.btnCaptura.configure(activebackground="#ececec")
        self.btnCaptura.configure(activeforeground="#000000")
        self.btnCaptura.configure(background="#d9d9d9")
        self.btnCaptura.configure(disabledforeground="#a3a3a3")
        self.btnCaptura.configure(foreground="#000000")
        self.btnCaptura.configure(highlightbackground="#d9d9d9")
        self.btnCaptura.configure(highlightcolor="black")
        self.btnCaptura.configure(pady="0")
        self.btnCaptura.configure(text='''Captura PinPad''')
        self.btnCaptura.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnCaptura(e))

        self.btnExecutar = tk.Button(top)
        self.btnExecutar.place(relx=0.284, rely=0.765, height=24, width=55)
        self.btnExecutar.configure(activebackground="#ececec")
        self.btnExecutar.configure(activeforeground="#000000")
        self.btnExecutar.configure(background="#d9d9d9")
        self.btnExecutar.configure(disabledforeground="#a3a3a3")
        self.btnExecutar.configure(foreground="#000000")
        self.btnExecutar.configure(highlightbackground="#d9d9d9")
        self.btnExecutar.configure(highlightcolor="black")
        self.btnExecutar.configure(pady="0")
        self.btnExecutar.configure(text='''Executar''')
        self.btnExecutar.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnExecutar(e))

        self.btnLimpaLog = tk.Button(top)
        self.btnLimpaLog.place(relx=0.52, rely=0.801, height=24, width=77)
        self.btnLimpaLog.configure(activebackground="#ececec")
        self.btnLimpaLog.configure(activeforeground="#000000")
        self.btnLimpaLog.configure(background="#d9d9d9")
        self.btnLimpaLog.configure(disabledforeground="#a3a3a3")
        self.btnLimpaLog.configure(foreground="#000000")
        self.btnLimpaLog.configure(highlightbackground="#d9d9d9")
        self.btnLimpaLog.configure(highlightcolor="black")
        self.btnLimpaLog.configure(pady="0")
        self.btnLimpaLog.configure(text='''Limpa Log''')
        self.btnLimpaLog.bind('<Button-1>',lambda e:pdvWindowsPayGoLibC_Python_support.ButtonMouse1btnLimpaLog(e))

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.662, rely=0.018, height=21, width=128)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''LOG de Eventos da DLL''')

    def Loga(self,message):
        self.LogDll.config(state="normal")
        self.LogDll.insert(END, message + "\n")
        self.LogDll.config(state="disabled")

    def InsereParametro(self,parametro):
        self.lstParameters.insert(END, parametro)
    
    def DeletaParametro(self,iPosParametro):
        self.lstParameters.delete(iPosParametro)


if __name__ == '__main__':
    vp_start_gui()
    





